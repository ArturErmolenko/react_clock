{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","props","clockName","clearInterval","className","React","Component","App","isClockVisible","showClock","hideClock","setRandomName","Math","ceil","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAZP,gCAeE,SAAmBC,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCL,QAAQC,IAAR,iCAAsCE,EAAUE,UAAhD,eAAgER,KAAKO,MAAMC,cAlBjF,kCAsBE,WACMR,KAAKD,SACPU,cAAcT,KAAKD,WAxBzB,oBA4BE,WACE,OACE,oBAAGW,UAAU,aAAb,0BAEG,IACAV,KAAKJ,MAAMC,KAAKQ,4BAjCzB,GAA2BM,IAAMC,WCD3BC,E,4MACJjB,MAAe,CACbkB,gBAAgB,EAChBN,UAAW,G,EAGbO,UAAY,WACV,EAAKb,SAAS,CAAEY,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,cAAgB,WACd,EAAKf,SAAS,CAAEM,UAAWU,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG5C,WACE,MAAsCpB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBN,EAAxB,EAAwBA,UAExB,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,wBACEW,KAAK,SACLX,UAAU,2BACVY,QAAStB,KAAKe,UAHhB,wBAQA,wBACEM,KAAK,SACLX,UAAU,yBACVY,QAAStB,KAAKgB,UAHhB,wBAQA,wBACEK,KAAK,SACLX,UAAU,4BACVY,QAAStB,KAAKiB,cAHhB,6BAOCH,GACC,cAAC,EAAD,CAAON,UAAWA,W,GAhDVG,IAAMC,WAuDTC,IC7DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fab3590d.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p className=\"app__timer\">\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component <{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.ceil(Math.random() * 1000) });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">React clock</h1>\n        <button\n          type=\"button\"\n          className=\"ui inverted green button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"ui inverted red button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"ui inverted purple button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n        {isClockVisible && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}